<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2013r4.1" FormatVersion="2" MinIDEVersion="20070100">
<block type="Module" ID="338192383">
 <ObjName>X3IO</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>x3df_matchColorPal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchColorPal(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpR As Double</SourceLine>
   <SourceLine>Dim tmpG As Double</SourceLine>
   <SourceLine>Dim tmpB As Double</SourceLine>
   <SourceLine>Dim tmpA As Double</SourceLine>
   <SourceLine>Dim c As X3Core.X3Color</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>c = new X3Core.X3Color(tmpR, tmpG, tmpB, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.ColorPal.Append c</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchDouble</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchDouble(mp As Ptr, ByRef pos As Integer, ByRef value As Double) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim sPosInt As Integer</SourceLine>
   <SourceLine>Dim ePosInt As Integer</SourceLine>
   <SourceLine>Dim sPosFrac As Integer</SourceLine>
   <SourceLine>Dim ePosFrac As Integer</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim exp As Integer</SourceLine>
   <SourceLine>Dim minus As Double</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 45 then ' minus</SourceLine>
   <SourceLine>pos = pos + 1 ' skip sign</SourceLine>
   <SourceLine>minus = -1</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>minus = 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPosInt = pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while ((mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57))</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ePosInt = pos - 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 46 then ' .</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPosFrac = pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while ((mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57))</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ePosFrac = pos - 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPosFrac = -1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' integer part</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ePosInt &gt;= sPosInt then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exp = ePosInt - sPosInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = sPosInt to ePosInt</SourceLine>
   <SourceLine>value = value + (mp.Byte(i) - 48) * 10^exp</SourceLine>
   <SourceLine>exp = exp - 1</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' fraction part</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sPosFrac &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exp = 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = sPosFrac to ePosFrac</SourceLine>
   <SourceLine>value = value + (mp.Byte(i) - 48) / 10^exp</SourceLine>
   <SourceLine>exp = exp + 1</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = value * minus</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef value As Double</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchInteger</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchInteger(mp As Ptr, ByRef pos As Integer, ByRef value As Integer) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim sPos As Integer</SourceLine>
   <SourceLine>Dim ePos As Integer</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim exp As Integer</SourceLine>
   <SourceLine>Dim minus As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 45 then ' minus</SourceLine>
   <SourceLine>pos = pos + 1 ' skip sign</SourceLine>
   <SourceLine>minus = -1</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>minus = 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPos = pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip first digit or sign symbol</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while (mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57)</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ePos = pos - 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ePos &gt;= sPos then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exp = ePos - sPos</SourceLine>
   <SourceLine>for i = sPos to ePos</SourceLine>
   <SourceLine>value = value + (mp.Byte(i) - 48) * 10^exp</SourceLine>
   <SourceLine>exp = exp - 1</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = value * minus</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef value As Integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchMaterial</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchMaterial(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpR As Double</SourceLine>
   <SourceLine>Dim tmpG As Double</SourceLine>
   <SourceLine>Dim tmpB As Double</SourceLine>
   <SourceLine>Dim tmpA As Double</SourceLine>
   <SourceLine>Dim c As X3Core.X3Color</SourceLine>
   <SourceLine>Dim m As X3Core.X3Material</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m = new X3Core.X3Material</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ===== AMBIENT =====================================</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m.Ambient.Red = tmpR</SourceLine>
   <SourceLine>m.Ambient.Green = tmpG</SourceLine>
   <SourceLine>m.Ambient.Blue = tmpB</SourceLine>
   <SourceLine>m.Ambient.Alpha = tmpA</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ===== DIFFUSE =====================================</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m.Diffuse.Red = tmpR</SourceLine>
   <SourceLine>m.Diffuse.Green = tmpG</SourceLine>
   <SourceLine>m.Diffuse.Blue = tmpB</SourceLine>
   <SourceLine>m.Diffuse.Alpha = tmpA</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ===== SPECULAR =====================================</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpG)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpA)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m.Specular.Red = tmpR</SourceLine>
   <SourceLine>m.Specular.Green = tmpG</SourceLine>
   <SourceLine>m.Specular.Blue = tmpB</SourceLine>
   <SourceLine>m.Specular.Alpha = tmpA</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpR)</SourceLine>
   <SourceLine>m.Shininess = tmpR</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Material.Append m</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchNormal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchNormal(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine>Dim n As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = new X3Core.X3Vector(tmpX, tmpY, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Normal.Append n</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchPolygon</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchPolygon(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim p As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine>Dim bLoadedNormal As Boolean</SourceLine>
   <SourceLine>Dim tmpInt As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>p = new X3Core.X3Polygon()</SourceLine>
   <SourceLine>bLoadedNormal = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case tmpStr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "ci"</SourceLine>
   <SourceLine>result = x3df_matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine>p.CIndex = tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "mi"</SourceLine>
   <SourceLine>result = x3df_matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine>p.MIndex = tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "ni"</SourceLine>
   <SourceLine>result = x3df_matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine>p.NIndex = tmpInt</SourceLine>
   <SourceLine>bLoadedNormal = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "ti"</SourceLine>
   <SourceLine>result = x3df_matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine>p.TIndex = tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "uvi"</SourceLine>
   <SourceLine>result = x3df_matchUVIndex(mp, pos, p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "vi"</SourceLine>
   <SourceLine>result = x3df_matchVIndex(mp, pos, p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "vni"</SourceLine>
   <SourceLine>result = x3df_matchVNIndex(mp, pos, p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else ' unknown tag</SourceLine>
   <SourceLine>x3df_skipValue(mp, pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false ' malformed JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) or not result</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result then</SourceLine>
   <SourceLine>model.AppendPolygon p</SourceLine>
   <SourceLine>if not bLoadedNormal then</SourceLine>
   <SourceLine>p.CalculateNormal()</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchString(mp As Ptr, ByRef pos As Integer, ByRef value As String) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim sPos As Integer</SourceLine>
   <SourceLine>Dim ePos As Integer</SourceLine>
   <SourceLine>Dim valueMB As MemoryBlock</SourceLine>
   <SourceLine>Dim valuePtr As Ptr</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim idx As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine>value = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 34 then ' "</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPos = pos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;&gt; 34</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ePos = pos - 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ePos &gt;= sPos then</SourceLine>
   <SourceLine>valueMB = new MemoryBlock(ePos - sPos + 1)</SourceLine>
   <SourceLine>valuePtr = valueMB</SourceLine>
   <SourceLine>idx = 0</SourceLine>
   <SourceLine>for i = sPos to ePos</SourceLine>
   <SourceLine>valuePtr.Byte(idx) = mp.Byte(i)</SourceLine>
   <SourceLine>idx = idx + 1</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>value = valueMB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef value As String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchTexture</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchTexture(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine>Dim t As X3Core.X3Texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = new X3Core.X3Texture(Picture.FromData(DecodeBase64(tmpStr)))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Texture.Append t</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchUVIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchUVIndex(mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpInt As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.UVIndex.Append tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchUVMap</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchUVMap(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpU As Double</SourceLine>
   <SourceLine>Dim tmpV As Double</SourceLine>
   <SourceLine>Dim uv As X3Core.X3UVCoordinate</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpU)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpV)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>uv = new X3Core.X3UVCoordinate(tmpU, tmpV)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.UVMap.Append uv</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchVertex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchVertex(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpX As Double</SourceLine>
   <SourceLine>Dim tmpY As Double</SourceLine>
   <SourceLine>Dim tmpZ As Double</SourceLine>
   <SourceLine>Dim v As X3Core.X3Vector</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpX)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpY)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1 ' skip past comma</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchDouble(mp, pos, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>v = new X3Core.X3Vector(tmpX, tmpY, tmpZ)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model.Vertex.Append v</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchVIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchVIndex(mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpInt As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.VIndex.Append tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchVNIndex</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchVNIndex(mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpInt As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchInteger(mp, pos, tmpInt)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly.VNIndex.Append tmpInt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) or not result ' ]</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef poly As X3Core.X3Polygon</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_matchX3Model</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function x3df_matchX3Model(mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model) As Boolean</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim tmpStr As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>model = new X3Core.X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if tmpStr = "x3model" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = x3df_matchString(mp, pos, tmpStr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 58 then ' :</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case tmpStr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "colorpal"</SourceLine>
   <SourceLine>result = x3df_matchColorPal(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "material"</SourceLine>
   <SourceLine>result = x3df_matchMaterial(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "normal"</SourceLine>
   <SourceLine>result = x3df_matchNormal(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "polygon"</SourceLine>
   <SourceLine>result = x3df_matchPolygon(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "vertex"</SourceLine>
   <SourceLine>result = x3df_matchVertex(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "texture"</SourceLine>
   <SourceLine>result = x3df_matchTexture(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case "uvmap"</SourceLine>
   <SourceLine>result = x3df_matchUVMap(mp, pos, model)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else ' unknown tag</SourceLine>
   <SourceLine>x3df_skipValue(mp, pos)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mp.Byte(pos) = 44 then ' ,</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = false ' malformed JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) or not result ' }</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return result</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer, ByRef model As X3Core.X3Model</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>x3df_skipValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub x3df_skipValue(mp As Ptr, ByRef pos As Integer)</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim count As Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ***** decimal value? *****</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ((mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57)) or (mp.Byte(pos) = 46)  or (mp.Byte(pos) = 45) then ' string value?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while ((mp.Byte(pos) &gt;= 48) and (mp.Byte(pos) &lt;= 57)) or (mp.Byte(pos) = 46)  or (mp.Byte(pos) = 45)</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ***** JSON object *****</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif mp.Byte(pos) = 123 then ' {</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>count = 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (mp.Byte(pos) = 123) then ' {</SourceLine>
   <SourceLine>count = count + 1</SourceLine>
   <SourceLine>elseif (mp.Byte(pos) = 125) then ' }</SourceLine>
   <SourceLine>count = count - 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 125) and (count &lt;= 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ***** string value *****</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif mp.Byte(pos) = 34 then ' "</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>loop until mp.Byte(pos) = 34</SourceLine>
   <SourceLine>pos = pos  + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ***** array *****</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif mp.Byte(pos) = 91 then ' [</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>count = 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (mp.Byte(pos) =  91) then ' [</SourceLine>
   <SourceLine>count = count + 1</SourceLine>
   <SourceLine>elseif (mp.Byte(pos) = 93) then ' ]</SourceLine>
   <SourceLine>count = count - 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>loop until (mp.Byte(pos) = 93) and (count &lt;= 0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>break ' shouldn't break here... what are we missing?</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' skip white space</SourceLine>
   <SourceLine>while mp.Byte(pos) &lt;= 32</SourceLine>
   <SourceLine>pos = pos + 1</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mp As Ptr, ByRef pos As Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3IO_LoadModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3IO_LoadModel(modelFile As FolderItem, surface As OpenGLSurface) As X3Core.X3Model</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim model As X3Core.X3Model</SourceLine>
   <SourceLine>Dim tin As TextInputStream</SourceLine>
   <SourceLine>Dim modelJSON As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if surface &lt;&gt; nil then</SourceLine>
   <SourceLine>surface.MakeCurrent()</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tin = TextInputStream.Open(modelFile) ' open file</SourceLine>
   <SourceLine>modelJSON = tin.ReadAll() ' load X3DF JSON from file</SourceLine>
   <SourceLine>tin.Close ' close file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Model = X3IO_ModelFromX3DF(modelJSON) ' parse data and create X3Model from JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>modelFile As FolderItem, surface As OpenGLSurface</ItemParams>
  <ItemResult>X3Core.X3Model</ItemResult>
 </Method>
 <Method>
  <ItemName>X3IO_ModelFromX3DF</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3IO_ModelFromX3DF(modelJSON As String) As X3Core.X3Model</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim model As new X3Core.X3Model</SourceLine>
   <SourceLine>Dim pos As Integer</SourceLine>
   <SourceLine>Dim jsonMB As MemoryBlock</SourceLine>
   <SourceLine>Dim result As Boolean</SourceLine>
   <SourceLine>Dim mp As Ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this method renders X3 Data Format JSON into an X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jsonMB = modelJSON</SourceLine>
   <SourceLine>pos = 0</SourceLine>
   <SourceLine>mp = jsonMB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result =x3df_matchX3Model(mp, pos, model) ' parse the JSON</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>modelJSON As String</ItemParams>
  <ItemResult>X3Core.X3Model</ItemResult>
 </Method>
 <Method>
  <ItemName>X3IO_SaveModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub X3IO_SaveModel(model As X3Core.X3Model, modelFile As FolderItem, saveNormals As Boolean = True)</SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim json as String</SourceLine>
   <SourceLine>Dim tout As TextOutputStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>json = X3IO_X3DFFromModel(model) ' generate X3 Data Format JSON from X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tout = TextOutputStream.Create(modelFile) ' open file for output</SourceLine>
   <SourceLine>tout.WriteLine json ' write X3DF JASON to file</SourceLine>
   <SourceLine>tout.Close ' close file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>model As X3Core.X3Model, modelFile As FolderItem, saveNormals As Boolean = True</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>X3IO_X3DFFromModel</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function X3IO_X3DFFromModel(model As X3Core.X3Model) As String</SourceLine>
   <SourceLine>' www.Xojo3D.com</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'#pragma DisableBackgroundTasks</SourceLine>
   <SourceLine>'#pragma NilObjectChecking</SourceLine>
   <SourceLine>'#pragma StackOverflowChecking</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim addedChild As Boolean</SourceLine>
   <SourceLine>Dim i As Integer</SourceLine>
   <SourceLine>Dim j As Integer</SourceLine>
   <SourceLine>Dim poly As X3Core.X3Polygon</SourceLine>
   <SourceLine>Dim text As X3Core.X3Texture</SourceLine>
   <SourceLine>Dim pic As Picture</SourceLine>
   <SourceLine>Dim firstValue As Boolean</SourceLine>
   <SourceLine>Dim modelJSON() As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' this method generates X3 Data Format JSON from an X3Model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>addedChild = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "{"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """x3model"":{"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' colorpal</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.ColorPal.Ubound &gt;= 0 then</SourceLine>
   <SourceLine>modelJSON.Append """colorpal"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(0).Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(0).Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(0).Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(0).Alpha)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to model.ColorPal.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(i).Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(i).Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(i).Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.ColorPal(i).Alpha)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' material</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Material.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """material"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.Material.Ubound</SourceLine>
   <SourceLine>if i &gt; 0 then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Ambient.Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Ambient.Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Ambient.Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Ambient.Alpha)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Diffuse.Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Diffuse.Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Diffuse.Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Diffuse.Alpha)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Specular.Red)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Specular.Green)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Specular.Blue)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Specular.Alpha)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Material(i).Shininess)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' vertex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Vertex.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """vertex"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(0).X)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(0).Y)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(0).Z)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to model.Vertex.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(i).X)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(i).Y)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Vertex(i).Z)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' uvmap</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.UVMap.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """uvmap"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.UVMap(0).U)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.UVMap(0).V)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to model.UVMap.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.UVMap(i).U)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.UVMap(i).V)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' normal</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Normal.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """normal"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(0).X)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(0).Y)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(0).Z)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to model.Normal.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(i).X)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(i).Y)</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append X3_Str(model.Normal(i).Z)</SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' normal</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Polygon.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """polygon"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.Polygon.Ubound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>poly = model.Polygon(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if i &gt; 0 then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "{" ' polygon</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>firstValue = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.TIndex &gt;= 0 then</SourceLine>
   <SourceLine>modelJSON.Append """ti"":" + Str(poly.TIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append """uvi"":["</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.UVIndex(0))</SourceLine>
   <SourceLine>for j = 1 to poly.UVIndex.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.UVIndex(j))</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine>modelJSON.Append "]"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>firstValue = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif poly.MIndex &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """mi"":" + Str(poly.MIndex)</SourceLine>
   <SourceLine>firstValue = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif poly.CIndex &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """ci"":" + Str(poly.CIndex)</SourceLine>
   <SourceLine>firstValue = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.NIndex &gt;= 0 then</SourceLine>
   <SourceLine>if not firstValue then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>modelJSON.Append """ni"":" + Str(poly.NIndex)</SourceLine>
   <SourceLine>firstValue = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not firstValue then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>modelJSON.Append """vi"":["</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.VIndex(0))</SourceLine>
   <SourceLine>for j = 1 to poly.VIndex.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.VIndex(j))</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine>modelJSON.Append "]"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if poly.VNIndex.Ubound &gt;= 0 then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append """vni"":["</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.VNIndex(0))</SourceLine>
   <SourceLine>for j = 1 to poly.VNIndex.Ubound</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>modelJSON.Append Str(poly.VNIndex(j))</SourceLine>
   <SourceLine>next j</SourceLine>
   <SourceLine>modelJSON.Append "]"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "}"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' texture</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if model.Texture.Ubound &gt;= 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if addedChild then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append """texture"":["</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to model.Texture.Ubound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>text = model.Texture(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if i &gt; 0 then</SourceLine>
   <SourceLine>modelJSON.Append ","</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pic = X3_PictureFromTexture(text)</SourceLine>
   <SourceLine>modelJSON.Append """" + EncodeBase64(pic.GetData(Picture.FormatPNG), 0) + """"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "]" ' vertex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>addedChild = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "}" ' x3model</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>modelJSON.Append "}" ' root</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Join(modelJSON, "")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>model As X3Core.X3Model</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
